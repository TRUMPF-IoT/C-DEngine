<!--
 SPDX-FileCopyrightText: Copyright (c) 2009-2020 TRUMPF Laser GmbH, authors: C-Labs
 SPDX-License-Identifier: MPL-2.0
 -->
<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>netstandard2.0</TargetFrameworks>
		<RootNamespace>nsCDEngine</RootNamespace>
		<AssemblyName>C-DEngine</AssemblyName>
		<PackageId>C-DEngine</PackageId>
		<PackageIcon>toplogo-128.png</PackageIcon>
		<Version>5.161.0$(cdeNugetSuffix)</Version>
		<Authors>Chris Muench</Authors>
		<Company>C-Labs</Company>
		<Product>C-DEngine for $(TargetFramework)$(cdeDebugProductSuffix)</Product>
		<NeutralLanguage>en</NeutralLanguage>
		<Description>C-Labs Distributed Engine</Description>
		<PackageDescription>C-Labs Distributed Engine</PackageDescription>
		<Copyright>Copyright Â© 2017-2023 TRUMPF Laser GmbH, authors: C-Labs</Copyright>
		<PackageLicenseExpression>MPL-2.0</PackageLicenseExpression>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<!-- Workaround for placing each DLL into a separate directory when using msbuild's GenerateProjectSpecificOutputFolder -->
		<ProjectName>$(AssemblyName).$(TargetFramework)</ProjectName>
		<!-- Workaround for placing the .nupkg into the build's output folder when using msbuild's GenerateProjectSpecificOutputFolder -->
		<PackageOutputPath>$(OutDir)</PackageOutputPath>
		<DefineConstants>TRACE;CDE_SYSLOG;$(DefineConstants)</DefineConstants>
		<LangVersion>preview</LangVersion>
		<TreatWarningsAsErrors>True</TreatWarningsAsErrors>
	</PropertyGroup>

	<PropertyGroup>
		<DocumentationFile>$(OutputPath)C-DEngine.xml</DocumentationFile>
	</PropertyGroup>

	<Choose>
		<When Condition="'$(TargetFramework)'=='netstandard2.0'">
			<PropertyGroup>
				<cdeNewtonSoftDefineConstants>HAVE_ADO_NET;HAVE_APP_DOMAIN;HAVE_ASYNC;HAVE_BIG_INTEGER;HAVE_BINARY_FORMATTER;HAVE_BINARY_SERIALIZATION;HAVE_BINARY_EXCEPTION_SERIALIZATION;HAVE_CHAR_TO_LOWER_WITH_CULTURE;HAVE_CHAR_TO_STRING_WITH_CULTURE;HAVE_COM_ATTRIBUTES;HAVE_COMPONENT_MODEL;HAVE_CONCURRENT_COLLECTIONS;HAVE_COVARIANT_GENERICS;HAVE_DATA_CONTRACTS;HAVE_DATE_TIME_OFFSET;HAVE_DB_NULL_TYPE_CODE;HAVE_DYNAMIC;HAVE_EMPTY_TYPES;HAVE_ENTITY_FRAMEWORK;HAVE_EXPRESSIONS;HAVE_FAST_REVERSE;HAVE_FSHARP_TYPES;HAVE_FULL_REFLECTION;HAVE_GUID_TRY_PARSE;HAVE_HASH_SET;HAVE_ICLONEABLE;HAVE_ICONVERTIBLE;HAVE_IGNORE_DATA_MEMBER_ATTRIBUTE;HAVE_INOTIFY_COLLECTION_CHANGED;HAVE_INOTIFY_PROPERTY_CHANGING;HAVE_ISET;HAVE_LINQ;HAVE_MEMORY_BARRIER;HAVE_METHOD_IMPL_ATTRIBUTE;HAVE_NON_SERIALIZED_ATTRIBUTE;HAVE_READ_ONLY_COLLECTIONS;HAVE_SECURITY_SAFE_CRITICAL_ATTRIBUTE;HAVE_SERIALIZATION_BINDER_BIND_TO_NAME;HAVE_STREAM_READER_WRITER_CLOSE;HAVE_STRING_JOIN_WITH_ENUMERABLE;HAVE_TIME_SPAN_PARSE_WITH_CULTURE;HAVE_TIME_SPAN_TO_STRING_WITH_CULTURE;HAVE_TIME_ZONE_INFO;HAVE_TRACE_WRITER;HAVE_TYPE_DESCRIPTOR;HAVE_UNICODE_SURROGATE_DETECTION;HAVE_VARIANT_TYPE_PARAMETERS;HAVE_VERSION_TRY_PARSE;HAVE_XLINQ;HAVE_XML_DOCUMENT;HAVE_XML_DOCUMENT_TYPE;HAVE_CONCURRENT_DICTIONARY</cdeNewtonSoftDefineConstants>
				<DefineConstants>CDE_USEWSS8;CDE_STANDARD;$(DefineConstants);$(cdeNewtonSoftDefineConstants)</DefineConstants>
			</PropertyGroup>
		</When>
		<When Condition="'$(TargetFramework)'=='net45'">
			<PropertyGroup>
				<cdeNewtonSoftDefineConstants>HAVE_ADO_NET;HAVE_APP_DOMAIN;HAVE_ASYNC;HAVE_BIG_INTEGER;HAVE_BINARY_FORMATTER;HAVE_BINARY_SERIALIZATION;HAVE_BINARY_EXCEPTION_SERIALIZATION;HAVE_CAS;HAVE_CHAR_TO_LOWER_WITH_CULTURE;HAVE_CHAR_TO_STRING_WITH_CULTURE;HAVE_COM_ATTRIBUTES;HAVE_COMPONENT_MODEL;HAVE_CONCURRENT_COLLECTIONS;HAVE_COVARIANT_GENERICS;HAVE_DATA_CONTRACTS;HAVE_DATE_TIME_OFFSET;HAVE_DB_NULL_TYPE_CODE;HAVE_DYNAMIC;HAVE_EMPTY_TYPES;HAVE_ENTITY_FRAMEWORK;HAVE_EXPRESSIONS;HAVE_FAST_REVERSE;HAVE_FSHARP_TYPES;HAVE_FULL_REFLECTION;HAVE_GUID_TRY_PARSE;HAVE_HASH_SET;HAVE_ICLONEABLE;HAVE_ICONVERTIBLE;HAVE_IGNORE_DATA_MEMBER_ATTRIBUTE;HAVE_INOTIFY_COLLECTION_CHANGED;HAVE_INOTIFY_PROPERTY_CHANGING;HAVE_ISET;HAVE_LINQ;HAVE_MEMORY_BARRIER;HAVE_METHOD_IMPL_ATTRIBUTE;HAVE_NON_SERIALIZED_ATTRIBUTE;HAVE_READ_ONLY_COLLECTIONS;HAVE_REFLECTION_EMIT;HAVE_SECURITY_SAFE_CRITICAL_ATTRIBUTE;HAVE_SERIALIZATION_BINDER_BIND_TO_NAME;HAVE_STREAM_READER_WRITER_CLOSE;HAVE_STRING_JOIN_WITH_ENUMERABLE;HAVE_TIME_SPAN_PARSE_WITH_CULTURE;HAVE_TIME_SPAN_TO_STRING_WITH_CULTURE;HAVE_TIME_ZONE_INFO;HAVE_TRACE_WRITER;HAVE_TYPE_DESCRIPTOR;HAVE_UNICODE_SURROGATE_DETECTION;HAVE_VARIANT_TYPE_PARAMETERS;HAVE_VERSION_TRY_PARSE;HAVE_XLINQ;HAVE_XML_DOCUMENT;HAVE_XML_DOCUMENT_TYPE;HAVE_CONCURRENT_DICTIONARY</cdeNewtonSoftDefineConstants>
				<DefineConstants>CDE_NET45;CDE_EVENTLOG;CDE_USEWSS8;$(DefineConstants);$(cdeNewtonSoftDefineConstants)</DefineConstants>
			</PropertyGroup>
		</When>
		<When Condition="'$(TargetFramework)'=='net40'">
			<PropertyGroup>
				<cdeNewtonSoftDefineConstants>HAVE_ADO_NET;HAVE_APP_DOMAIN;HAVE_BIG_INTEGER;HAVE_BINARY_FORMATTER;HAVE_BINARY_SERIALIZATION;HAVE_BINARY_EXCEPTION_SERIALIZATION;HAVE_CAS;HAVE_CHAR_TO_STRING_WITH_CULTURE;HAVE_CHAR_TO_LOWER_WITH_CULTURE;HAVE_COM_ATTRIBUTES;HAVE_COMPONENT_MODEL;HAVE_CONCURRENT_COLLECTIONS;HAVE_COVARIANT_GENERICS;HAVE_DATA_CONTRACTS;HAVE_DATE_TIME_OFFSET;HAVE_DB_NULL_TYPE_CODE;HAVE_DYNAMIC;HAVE_EMPTY_TYPES;HAVE_ENTITY_FRAMEWORK;HAVE_EXPRESSIONS;HAVE_FAST_REVERSE;HAVE_FSHARP_TYPES;HAVE_FULL_REFLECTION;HAVE_GUID_TRY_PARSE;HAVE_HASH_SET;HAVE_ICLONEABLE;HAVE_ICONVERTIBLE;HAVE_IGNORE_DATA_MEMBER_ATTRIBUTE;HAVE_INOTIFY_COLLECTION_CHANGED;HAVE_INOTIFY_PROPERTY_CHANGING;HAVE_ISET;HAVE_LINQ;HAVE_MEMORY_BARRIER;HAVE_NON_SERIALIZED_ATTRIBUTE;HAVE_REFLECTION_EMIT;HAVE_SECURITY_SAFE_CRITICAL_ATTRIBUTE;HAVE_SERIALIZATION_BINDER_BIND_TO_NAME;HAVE_STREAM_READER_WRITER_CLOSE;HAVE_STRING_JOIN_WITH_ENUMERABLE;HAVE_TIME_SPAN_PARSE_WITH_CULTURE;HAVE_TIME_SPAN_TO_STRING_WITH_CULTURE;HAVE_TIME_ZONE_INFO;HAVE_TRACE_WRITER;HAVE_TYPE_DESCRIPTOR;HAVE_UNICODE_SURROGATE_DETECTION;HAVE_VARIANT_TYPE_PARAMETERS;HAVE_VERSION_TRY_PARSE;HAVE_XLINQ;HAVE_XML_DOCUMENT;HAVE_XML_DOCUMENT_TYPE;HAVE_CONCURRENT_DICTIONARY</cdeNewtonSoftDefineConstants>
				<DefineConstants>CDE_NET4;$(DefineConstants);$(cdeNewtonSoftDefineConstants)</DefineConstants>
			</PropertyGroup>
		</When>
		<When Condition="'$(TargetFramework)'=='net35'">
			<PropertyGroup>
				<cdeNewtonSoftDefineConstants>HAVE_ADO_NET;HAVE_APP_DOMAIN;HAVE_BINARY_FORMATTER;HAVE_BINARY_SERIALIZATION;HAVE_BINARY_EXCEPTION_SERIALIZATION;HAVE_CAS;HAVE_CHAR_TO_STRING_WITH_CULTURE;HAVE_CHAR_TO_LOWER_WITH_CULTURE;HAVE_COM_ATTRIBUTES;HAVE_COMPONENT_MODEL;HAVE_DATA_CONTRACTS;HAVE_DATE_TIME_OFFSET;HAVE_DB_NULL_TYPE_CODE;HAVE_EMPTY_TYPES;HAVE_ENTITY_FRAMEWORK;HAVE_FAST_REVERSE;HAVE_FULL_REFLECTION;HAVE_HASH_SET;HAVE_ICLONEABLE;HAVE_ICONVERTIBLE;HAVE_INOTIFY_PROPERTY_CHANGING;HAVE_LINQ;HAVE_MEMORY_BARRIER;HAVE_NON_SERIALIZED_ATTRIBUTE;HAVE_REFLECTION_EMIT;HAVE_STREAM_READER_WRITER_CLOSE;HAVE_TIME_ZONE_INFO;HAVE_TRACE_WRITER;HAVE_TYPE_DESCRIPTOR;HAVE_UNICODE_SURROGATE_DETECTION;HAVE_XLINQ;HAVE_XML_DOCUMENT;HAVE_XML_DOCUMENT_TYPE</cdeNewtonSoftDefineConstants>
				<DefineConstants>CDE_NET35;$(DefineConstants);$(cdeNewtonSoftDefineConstants)</DefineConstants>
			</PropertyGroup>
		</When>

	</Choose>

	<ItemGroup>
		<None Include="toplogo-128.png" Pack="true" PackagePath="" />
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Include="C-DCommunication\ClientBin\FAVICON.ICO" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)'=='net35'">
		<PackageReference Include="TaskParallelLibrary" Version="1.0.2856" />
		<PackageReference Include="AsyncBridge.Net35" Version="0.3.1" />
		<!-- Required for dotnet build -->
		<PackageReference Include="jnm2.ReferenceAssemblies.net35" Version="1.0.1" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net45'">
		<Reference Include="System.IO.Compression" />
		<Reference Include="System.Threading.Tasks" />
		<Reference Include="System.Collections.Concurrent" />
		<PackageReference Include="Microsoft.CSharp">
			<Version>4.5.0</Version>
		</PackageReference>
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
		<PackageReference Include="Microsoft.CSharp">
			<Version>4.7.0</Version>
		</PackageReference>
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)'!='netstandard2.0'">
		<Reference Include="System.Configuration" />
		<Reference Include="System.Net" />
		<Reference Include="System.Management" />
		<Reference Include="System.Security" />
	</ItemGroup>

	<!-- MarkusH 2020/02/10: nuget restore does not set a proper solution path: fix it up -->
	<PropertyGroup Condition=" ('$(SolutionPath)' == '' OR !Exists('$(SolutionPath)'))AND  '$(SolutionDir)' != '' AND '$(SolutionDir)' != '*undefined*' ">
		<SolutionPath>$(SolutionDir)$(SolutionName).SLN</SolutionPath>
	</PropertyGroup>

	<PropertyGroup>
		<UpdaterInSolution>$([System.IO.File]::ReadAllText($(SolutionPath)).Contains('\cdeUpdater.csproj'))</UpdaterInSolution>
		<NewtonsoftSharedInSolution>$([System.IO.File]::ReadAllText($(SolutionPath)).Contains('\cdeNewtonsoft.JSON'))</NewtonsoftSharedInSolution>
	</PropertyGroup>
	<PropertyGroup Condition="'$(NewtonsoftSharedInSolution)' == 'True'">
		<DefineConstants>CDE_INTNEWTON;$(DefineConstants)</DefineConstants>
	</PropertyGroup>
	<PropertyGroup>
	  <NoWarn>1701;1702;CS1591</NoWarn>
	  <NoWarn>1701;1702;CS1591</NoWarn>
	</PropertyGroup>

	<ItemGroup Condition="'$(UpdaterInSolution)' == 'True'">
		<EmbeddedResource Include="$(MSBuildProjectDir)..\..\bin\$(Configuration)\cdeUpdater\net48\cdeUpdater.exe" Link="cdeUpdater.exe" />

		<ProjectReference Include="..\Utilities\cdeUpdater\cdeUpdater.csproj" PrivateAssets="All" Condition="'$(TargetFramework)'!='netstandard2.0'">
			<Project>{a30c012b-f161-48a7-ad0c-f12bd1ed263c}</Project>
			<Name>cdeUpdater</Name>
			<Private>True</Private>
			<ReferenceOutputAssembly>false</ReferenceOutputAssembly>
		</ProjectReference>
		<ProjectReference Include="..\Utilities\cdeUpdater\cdeUpdater.csproj" PrivateAssets="All" AdditionalProperties="TargetFramework=net48" Condition="'$(TargetFramework)'=='netstandard2.0'">
			<Project>{a30c012b-f161-48a7-ad0c-f12bd1ed263c}</Project>
			<Name>cdeUpdater</Name>
			<Private>True</Private>
			<ReferenceOutputAssembly>false</ReferenceOutputAssembly>
		</ProjectReference>

	</ItemGroup>
	<ItemGroup>
		<None Update="C-DEngine.CDES">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<Target Name="GetPackagingOutputs" />

	<Import Project="..\Utilities\cdeNewtonsoft.JSON\cdeNewtonsoft.JSON.projitems" Label="Shared" Condition="$(DefineConstants.Contains('CDE_INTNEWTON'))" />
	<ItemGroup>
		<PackageReference Include="Newtonsoft.JSON" Version="13.0.2" Condition="!$(DefineConstants.Contains('CDE_INTNEWTON'))" />
		<PackageReference Include="System.Text.Json" Version="7.0.0" Condition="$(DefineConstants.Contains('CDE_MEADOW'))" />
	</ItemGroup>

	<Target Name="CopyUpdaterEXEBeforeBuild" BeforeTargets="BeforeBuild">
		<MSBuild Projects="@(ProjectReference)" Targets="GetTargetPath" BuildInParallel="false" Condition="'%(Name)'=='cdeUpdater'">
			<Output TaskParameter="TargetOutputs" ItemName="DependentAssemblies" />
		</MSBuild>
		<Copy SourceFiles="@(DependentAssemblies)" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" Retries="10" RetryDelayMilliseconds="5000" />
	</Target>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
		<!--<Exec Command="if not exist $(TargetDir)merged\ md $(TargetDir)merged\" />
    <Exec Command="$(ILMergeConsolePath) $(TargetPath) /out:$(TargetDir)merged\$(AssemblyName).dll $(PkgNewtonsoft_JSON)\lib\$(TargetFramework)\Newtonsoft.Json.dll /internalize" />
    <Exec Command="del $(TargetPath)" />
    <Exec Command="del $(TargetDir)$(AssemblyName).pdb" />
    <Exec Command="move $(TargetDir)merged\$(AssemblyName).dll $(TargetDir)" />
    <Exec Command="move $(TargetDir)merged\$(AssemblyName).pdb $(TargetDir)" />-->
		<Exec Command="call &quot;$(ProjectDir)..\..\BuildTools\signMeSha.bat&quot; &quot;$(TargetDir)$(TargetFileName)&quot;" />
	</Target>

</Project>

